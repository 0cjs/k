load befunge-compiled
mod BEFUNGE-TEST is
	including BEFUNGE .
	
	--- Programs
  	op pHelloWorld : -> KProperLabel [metadata "arity 0"] .
		
	--- "olleH">:#,_@
	eq pHelloWorld = injectM(
			__(
			coord(inject(0)(.kl),, inject(0)(.kl)) |-> inject("\"")(.kl),(
			coord(inject(1)(.kl),, inject(0)(.kl)) |-> inject("o")(.kl)
			coord(inject(2)(.kl),, inject(0)(.kl)) |-> inject("l")(.kl)
			coord(inject(3)(.kl),, inject(0)(.kl)) |-> inject("l")(.kl) 
			coord(inject(4)(.kl),, inject(0)(.kl)) |-> inject("e")(.kl) 
			coord(inject(5)(.kl),, inject(0)(.kl)) |-> inject("H")(.kl)
			coord(inject(6)(.kl),, inject(0)(.kl)) |-> inject("\"")(.kl)
			coord(inject(7)(.kl),, inject(0)(.kl)) |-> inject(">")(.kl)
			coord(inject(8)(.kl),, inject(0)(.kl)) |-> inject(":")(.kl)
			coord(inject(9)(.kl),, inject(0)(.kl)) |-> inject("#")(.kl)
			coord(inject(10)(.kl),, inject(0)(.kl)) |-> inject(",")(.kl) 
			coord(inject(11)(.kl),, inject(0)(.kl)) |-> inject("_")(.kl)
			coord(inject(12)(.kl),, inject(0)(.kl)) |-> inject("@")(.kl)
			))
		) .
	
	op pFactorial : -> KProperLabel [metadata "arity 0"] .
	--- 1&>: #v_$\:#v_$.@
	---   ^-1:<^00 *<
	eq pFactorial = injectM(
			__(
			coord(inject(0)(.kl),, inject(0)(.kl)) |-> inject("1")(.kl),(
			coord(inject(1)(.kl),, inject(0)(.kl)) |-> inject("&")(.kl)
			coord(inject(2)(.kl),, inject(0)(.kl)) |-> inject(">")(.kl)
			coord(inject(3)(.kl),, inject(0)(.kl)) |-> inject(":")(.kl)
			coord(inject(4)(.kl),, inject(0)(.kl)) |-> inject(" ")(.kl)
			coord(inject(5)(.kl),, inject(0)(.kl)) |-> inject("#")(.kl)
			coord(inject(6)(.kl),, inject(0)(.kl)) |-> inject("v")(.kl)
			coord(inject(7)(.kl),, inject(0)(.kl)) |-> inject("_")(.kl)
			coord(inject(8)(.kl),, inject(0)(.kl)) |-> inject("$")(.kl)
			coord(inject(9)(.kl),, inject(0)(.kl)) |-> inject("\\")(.kl)
			coord(inject(10)(.kl),, inject(0)(.kl)) |-> inject(":")(.kl)
			coord(inject(11)(.kl),, inject(0)(.kl)) |-> inject("#")(.kl)
			coord(inject(12)(.kl),, inject(0)(.kl)) |-> inject("v")(.kl)
			coord(inject(13)(.kl),, inject(0)(.kl)) |-> inject("_")(.kl)
			coord(inject(14)(.kl),, inject(0)(.kl)) |-> inject("$")(.kl)
			coord(inject(15)(.kl),, inject(0)(.kl)) |-> inject(".")(.kl)
			coord(inject(16)(.kl),, inject(0)(.kl)) |-> inject("@")(.kl)
			
			coord(inject(0)(.kl),, inject(1)(.kl)) |-> inject(" ")(.kl)
			coord(inject(1)(.kl),, inject(1)(.kl)) |-> inject(" ")(.kl)
			coord(inject(2)(.kl),, inject(1)(.kl)) |-> inject("^")(.kl)
			coord(inject(3)(.kl),, inject(1)(.kl)) |-> inject("-")(.kl)
			coord(inject(4)(.kl),, inject(1)(.kl)) |-> inject("1")(.kl)
			coord(inject(5)(.kl),, inject(1)(.kl)) |-> inject(":")(.kl)
			coord(inject(6)(.kl),, inject(1)(.kl)) |-> inject("<")(.kl)
			coord(inject(7)(.kl),, inject(1)(.kl)) |-> inject("^")(.kl)
			coord(inject(8)(.kl),, inject(1)(.kl)) |-> inject("0")(.kl)
			coord(inject(9)(.kl),, inject(1)(.kl)) |-> inject("0")(.kl)
			coord(inject(10)(.kl),, inject(1)(.kl)) |-> inject(" ")(.kl)
			coord(inject(11)(.kl),, inject(1)(.kl)) |-> inject("*")(.kl)
			coord(inject(12)(.kl),, inject(1)(.kl)) |-> inject("<")(.kl)
			))
		) .
endm

---set trace on .
rew eval(pHelloWorld(.kl)) .
rew eval(pFactorial(.kl), injectL(l(inject(6)(.kl)))(.kl)) .
