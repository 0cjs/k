load befunge-compiled
mod BEFUNGE-TEST is
	including BEFUNGE .
	
	--- Programs
  	op pHelloWorld1 : -> KProperLabel [metadata "arity 0"] .
		
	--- "olleH">:#,_@
	eq pHelloWorld1 = injectM(
			(coord(inject(0)(.List{K}),, inject(0)(.List{K})) |-> (inject("\"")(.List{K})))
			(coord(inject(1)(.List{K}),, inject(0)(.List{K})) |-> (inject("o")(.List{K})))
			(coord(inject(2)(.List{K}),, inject(0)(.List{K})) |-> (inject("l")(.List{K})))
			(coord(inject(3)(.List{K}),, inject(0)(.List{K})) |-> (inject("l")(.List{K})))
			(coord(inject(4)(.List{K}),, inject(0)(.List{K})) |-> (inject("e")(.List{K}) ))
			(coord(inject(5)(.List{K}),, inject(0)(.List{K})) |-> (inject("H")(.List{K})))
			(coord(inject(6)(.List{K}),, inject(0)(.List{K})) |-> (inject("\"")(.List{K})))
			(coord(inject(7)(.List{K}),, inject(0)(.List{K})) |-> (inject(">")(.List{K})))
			(coord(inject(8)(.List{K}),, inject(0)(.List{K})) |-> (inject(":")(.List{K})))
			(coord(inject(9)(.List{K}),, inject(0)(.List{K})) |-> (inject("#")(.List{K})))
			(coord(inject(10)(.List{K}),, inject(0)(.List{K})) |-> (inject(",")(.List{K}) ))
			(coord(inject(11)(.List{K}),, inject(0)(.List{K})) |-> (inject("_")(.List{K})))
			(coord(inject(12)(.List{K}),, inject(0)(.List{K})) |-> (inject("@")(.List{K})))
			) .
	op pHelloWorld2 : -> KProperLabel [metadata "arity 0"] .
	eq pHelloWorld2 = injectM(
			__(
			coord(inject(0)(.List{K}),, inject(0)(.List{K})) |-> inject("\"")(.List{K}),(
			coord(inject(1)(.List{K}),, inject(0)(.List{K})) |-> inject("o")(.List{K})
			coord(inject(2)(.List{K}),, inject(0)(.List{K})) |-> inject("l")(.List{K})
			coord(inject(3)(.List{K}),, inject(0)(.List{K})) |-> inject("l")(.List{K}) 
			coord(inject(4)(.List{K}),, inject(0)(.List{K})) |-> inject("e")(.List{K}) 
			coord(inject(5)(.List{K}),, inject(0)(.List{K})) |-> inject("H")(.List{K})
			coord(inject(6)(.List{K}),, inject(0)(.List{K})) |-> inject("\"")(.List{K})
			coord(inject(7)(.List{K}),, inject(0)(.List{K})) |-> inject(">")(.List{K})
			coord(inject(8)(.List{K}),, inject(0)(.List{K})) |-> inject(":")(.List{K})
			coord(inject(9)(.List{K}),, inject(0)(.List{K})) |-> inject("#")(.List{K})
			coord(inject(10)(.List{K}),, inject(0)(.List{K})) |-> inject(",")(.List{K}) 
			coord(inject(11)(.List{K}),, inject(0)(.List{K})) |-> inject("_")(.List{K})
			coord(inject(12)(.List{K}),, inject(0)(.List{K})) |-> inject("@")(.List{K})
			))
		) .
	
endm

---set trace on .
rew eval(pHelloWorld1(.List{K})) .
rew eval(pHelloWorld2(.List{K})) .